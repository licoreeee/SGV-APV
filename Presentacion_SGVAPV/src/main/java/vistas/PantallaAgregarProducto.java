package vistas;

import dtos.ProductoDTO;
import dtos.ProductoVentaDTO;
import dtos.VentaDTO;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import org.itson.subsistemaventas_sgvapv.ISubsistemaVentasFacade;
import org.itson.subsistemaventas_sgvapv.SubsistemaVentasFacade;

/**
 *
 * @author Dell
 */
public class PantallaAgregarProducto extends javax.swing.JFrame {

    private String tipoVenta;
    private VentaDTO venta;
    private ISubsistemaVentasFacade subsistemaVentasFacade = new SubsistemaVentasFacade();
    private PantallaVenta pantallaVenta;

    /**
     * Creates new form PantallaInicioSesion
     */
    public PantallaAgregarProducto(PantallaVenta pantallaVenta, VentaDTO venta, String tipoVenta) {
        initComponents();
        setEnabled(true);
        setVisible(true);
        this.setTitle("SGVAPV - Agregar Producto");
        this.pantallaVenta = pantallaVenta;
        this.venta = venta;
        this.tipoVenta = tipoVenta;
        cargarProductos();
        txtStock.setEditable(false);
        txtCantidad.setEditable(false);
    }

    private void cargarProductos() {
        // Creamos una lista de productos.
        List<ProductoDTO> productos = new ArrayList<>();
        if (tipoVenta.equalsIgnoreCase("PRODUCTO VARIADO")) {
            productos = subsistemaVentasFacade.obtenerProductosPorTipo(List.of("VARIADO")); 
        } else if (tipoVenta.equalsIgnoreCase("AGUA PURIFICADA")) {
            productos = subsistemaVentasFacade.obtenerProductosPorTipo(List.of("LLENADO", "CONTENEDOR"));
        }

        if (productos.isEmpty()) {
            JOptionPane.showConfirmDialog(this, "No se han encontrado productos con stock.", "No hay stock", JOptionPane.CLOSED_OPTION, JOptionPane.ERROR_MESSAGE);
            this.dispose();
            pantallaVenta.setVisible(true);
        } else {
            // Creamos un modelo para combo box.
            DefaultComboBoxModel<Object> modelo = new DefaultComboBoxModel<>();
            modelo.addElement("-- Seleccionar");
            for (ProductoDTO producto : productos) {
                // Agregamos cada producto al modelo.
                modelo.addElement(producto);
            }

            // Asignamos el modelo al combo box.
            cmbxProductos.setModel(modelo);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        txtStock = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        lblTipoVenta = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cmbxProductos = new javax.swing.JComboBox<>();
        txtCantidad = new javax.swing.JTextField();
        btnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(196, 216, 255));
        setEnabled(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(41, 136, 194));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Afacad", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("SISTEMA GENERAL DE VENTAS");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo Agua Purificada del Valle.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(14, 14, 14))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 70));

        jPanel2.setBackground(new java.awt.Color(196, 216, 255));

        jLabel4.setFont(new java.awt.Font("Afacad", 1, 23)); // NOI18N
        jLabel4.setText("PRODUCTO");

        jLabel5.setFont(new java.awt.Font("Afacad", 1, 23)); // NOI18N
        jLabel5.setText("STOCK");

        btnAgregar.setBackground(new java.awt.Color(41, 136, 194));
        btnAgregar.setFont(new java.awt.Font("Afacad", 1, 23)); // NOI18N
        btnAgregar.setText("AGREGAR");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        txtStock.setFont(new java.awt.Font("Afacad", 1, 20)); // NOI18N
        txtStock.setFocusable(false);

        jLabel3.setFont(new java.awt.Font("Afacad", 1, 30)); // NOI18N
        jLabel3.setText("BUSCAR PRODUCTO");

        lblTipoVenta.setFont(new java.awt.Font("Afacad", 1, 20)); // NOI18N
        lblTipoVenta.setText("AGUA PURIFICADA");

        jLabel6.setFont(new java.awt.Font("Afacad", 1, 23)); // NOI18N
        jLabel6.setText("CANTIDAD");

        cmbxProductos.setFont(new java.awt.Font("Afacad", 1, 20)); // NOI18N
        cmbxProductos.setSelectedItem("--Seleccionar");
        cmbxProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbxProductosActionPerformed(evt);
            }
        });

        txtCantidad.setFont(new java.awt.Font("Afacad", 1, 20)); // NOI18N
        txtCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantidadKeyTyped(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Afacad", 1, 23)); // NOI18N
        btnCancelar.setText("CANCELAR");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(391, 391, 391)
                        .addComponent(btnAgregar))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(195, 195, 195)
                        .addComponent(jLabel3))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6)
                                    .addComponent(btnCancelar))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel5)
                                .addGap(65, 65, 65)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtStock, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                            .addComponent(cmbxProductos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtCantidad, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(231, 231, 231)
                        .addComponent(lblTipoVenta)))
                .addContainerGap(170, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTipoVenta)
                .addGap(42, 42, 42)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbxProductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnCancelar))
                .addGap(38, 38, 38))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 720, 420));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        if (cmbxProductos.getSelectedItem() instanceof ProductoDTO) {
            ProductoDTO producto = (ProductoDTO) cmbxProductos.getSelectedItem();
            if (!txtCantidad.getText().isBlank()) {
                int cantidadIngresada = Integer.parseInt(txtCantidad.getText());
                if (cantidadIngresada <= 0) {
                    JOptionPane.showConfirmDialog(this, "Ingrese una cantidad válida.", "Cantidad inválida", JOptionPane.CLOSED_OPTION, JOptionPane.ERROR_MESSAGE);
                } else {
                    ProductoVentaDTO productoVenta = new ProductoVentaDTO();
                    productoVenta.setCantidad(cantidadIngresada);
                    productoVenta.setPrecio(producto.getPrecio());
                    productoVenta.setProducto(producto);

                    if (validarCantidad(venta, productoVenta)) {
                        venta.agregarProducto(productoVenta);
                        venta.actualizarTotal();
                        pantallaVenta.cargarProducto(productoVenta);
                        this.dispose();
                    } else {
                        JOptionPane.showConfirmDialog(this, "La cantidad ingresada sobrepasa el stock.",
                                "Cantidad inválida", JOptionPane.CLOSED_OPTION, JOptionPane.ERROR_MESSAGE);
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "Asegúrese de ingresar una cantidad.",
                        "Cantidad Vacía.", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Asegúrese de seleccionar un producto válido.",
                    "Producto no Válido.", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        pantallaVenta.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void verificarTipoVenta() {
        if (this.getTipoVenta().equalsIgnoreCase("AGUA PURIFICADA")) {
            jLabel5.setVisible(false);
            txtStock.setVisible(false);
        }
    }

    public String getTipoVenta() {
        return tipoVenta;
    }

    public void setTipoVenta(String tipoVenta) {
        this.tipoVenta = tipoVenta;
        lblTipoVenta.setText(tipoVenta);
    }

    private void cmbxProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbxProductosActionPerformed
        if (cmbxProductos.getSelectedItem() instanceof ProductoDTO) {
            ProductoDTO productoSeleccionado = (ProductoDTO) cmbxProductos.getSelectedItem();
            int stock = productoSeleccionado.getCantidad();
            txtStock.setText(String.valueOf(stock));
            txtCantidad.setEditable(true);
        } else {
            txtStock.setText("");
            txtCantidad.setText("");
            txtCantidad.setEditable(false);
        }
    }//GEN-LAST:event_cmbxProductosActionPerformed

    private void txtCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadKeyTyped
        int key = evt.getKeyChar();
        //Solo permitirá caracteres de números y de '/'.
        boolean nums = key >= 48 && key <= 57;
        if (!nums) {
            evt.consume();
        }
        if (txtCantidad.getText().trim().length() == 8) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCantidadKeyTyped

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JComboBox<Object> cmbxProductos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblTipoVenta;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtStock;
    // End of variables declaration//GEN-END:variables

    private boolean validarCantidad(VentaDTO venta, ProductoVentaDTO productoVentaNuevo) {
        if (productoVentaNuevo.getCantidad() > productoVentaNuevo.getProducto().getCantidad()) {
            return false;
        } else {
            for (ProductoVentaDTO productoVenta : venta.getProductos()) {
                if (productoVenta.getProducto().getCodigo().equalsIgnoreCase(productoVentaNuevo.getProducto().getCodigo())) {
                    int cantidadVenta = productoVenta.getCantidad();
                    int cantidadActualizada = cantidadVenta + productoVentaNuevo.getCantidad();
                    int cantidadStock = productoVenta.getProducto().getCantidad();
                    if (cantidadActualizada > cantidadStock) {
                        return false;
                    }
                }
            }
        }
        return true;
    }
}
