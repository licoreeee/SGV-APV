
package vistas;

import dtos.ContenedorDTO;
import dtos.LlenadoDTO;
import dtos.ProductoDTO;
import dtos.UsuarioDTO;
import dtos.VariadoDTO;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.itson.subsistemainventario_sgvapv.ISubsistemaInventarioFacade;
import org.itson.subsistemainventario_sgvapv.SubsistemaInventarioFacade;
import org.itson.subsistemainventario_sgvapv.excepciones.SubsistemaInventarioException;

/**
 *
 * @author Dell
 */
public class PantallaAgregarProductoInventario extends javax.swing.JFrame {

    private UsuarioDTO usuario;
    private JFrame parentFrame; // --- CAMBIO: Renombrado de 'parent' para claridad ---
    private ISubsistemaInventarioFacade subsistemaInventarioFacade;
    private final String PLACEHOLDER_TIPO = "-- Seleccionar Tipo --";
    private final String PLACEHOLDER_CONTENEDOR = "-- Seleccionar Contenedor --";

    /**
     * Creates new form PantallaAgregarProductoInventario
     */
    public PantallaAgregarProductoInventario(JFrame parentFrame, UsuarioDTO usuario) {
        initComponents();
        setVisible(true);
        this.parentFrame = parentFrame;
        this.usuario = usuario;
        this.setTitle("Sistema General de Ventas de Agua Purificada del Valle — Agregar Producto");
        this.subsistemaInventarioFacade = new SubsistemaInventarioFacade();
        inicializarComponentesAdicionales();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbxProductos = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        txtStock = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();
        btnCancelar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        cmbxTipoProductos = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        lblLitros = new javax.swing.JLabel();
        txtLitros = new javax.swing.JTextField();
        lblVolumen = new javax.swing.JLabel();
        txtVolumen = new javax.swing.JTextField();

        cmbxProductos.setFont(new java.awt.Font("Afacad", 1, 20)); // NOI18N
        cmbxProductos.setSelectedItem("--Seleccionar");
        cmbxProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbxProductosActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(196, 216, 255));

        jPanel1.setBackground(new java.awt.Color(41, 136, 194));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Afacad", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("SISTEMA GENERAL DE VENTAS");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo Agua Purificada del Valle.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(14, 14, 14))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel5.setFont(new java.awt.Font("Afacad", 1, 23)); // NOI18N
        jLabel5.setText("CÓDIGO");

        btnAgregar.setBackground(new java.awt.Color(41, 136, 194));
        btnAgregar.setFont(new java.awt.Font("Afacad", 1, 23)); // NOI18N
        btnAgregar.setText("AGREGAR");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        txtStock.setFont(new java.awt.Font("Afacad", 1, 20)); // NOI18N
        txtStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStockActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Afacad", 1, 30)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("AGREGAR NUEVO PRODUCTO");

        jLabel6.setFont(new java.awt.Font("Afacad", 1, 23)); // NOI18N
        jLabel6.setText("PRECIO");

        txtPrecio.setFont(new java.awt.Font("Afacad", 1, 20)); // NOI18N
        txtPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecioKeyTyped(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Afacad", 1, 23)); // NOI18N
        btnCancelar.setText("CANCELAR");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Afacad", 1, 23)); // NOI18N
        jLabel7.setText("NOMBRE");

        jLabel8.setFont(new java.awt.Font("Afacad", 1, 23)); // NOI18N
        jLabel8.setText("STOCK");

        txtCodigo.setFont(new java.awt.Font("Afacad", 1, 20)); // NOI18N
        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });

        txtNombre.setFont(new java.awt.Font("Afacad", 1, 20)); // NOI18N

        cmbxTipoProductos.setFont(new java.awt.Font("Afacad", 1, 20)); // NOI18N
        cmbxTipoProductos.setSelectedItem("--Seleccionar");
        cmbxTipoProductos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbxTipoProductosItemStateChanged(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Afacad", 1, 23)); // NOI18N
        jLabel10.setText("TIPO DE PRODUCTO");

        lblLitros.setFont(new java.awt.Font("Afacad", 1, 23)); // NOI18N
        lblLitros.setText("LITROS");

        txtLitros.setFont(new java.awt.Font("Afacad", 1, 20)); // NOI18N

        lblVolumen.setFont(new java.awt.Font("Afacad", 1, 23)); // NOI18N
        lblVolumen.setText("VOLUMEN");

        txtVolumen.setFont(new java.awt.Font("Afacad", 1, 20)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(120, 120, 120))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(165, 165, 165)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbxTipoProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblLitros, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtLitros, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblVolumen)
                                .addGap(18, 18, 18)
                                .addComponent(txtVolumen, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabel3)
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(cmbxTipoProductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLitros)
                            .addComponent(txtLitros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVolumen)
                    .addComponent(txtVolumen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnAgregar))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        String nombre = txtNombre.getText().trim();
        String codigo = txtCodigo.getText().trim();
        String precioStr = txtPrecio.getText().trim();

        Object tipoSeleccionadoObj = cmbxTipoProductos.getSelectedItem();
        String tipoSeleccionado = (tipoSeleccionadoObj != null && !tipoSeleccionadoObj.toString().equals(PLACEHOLDER_TIPO))
                ? tipoSeleccionadoObj.toString() : null;

        if (tipoSeleccionado == null) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un tipo de producto.", "Validación Faltante", JOptionPane.WARNING_MESSAGE);
            cmbxTipoProductos.requestFocus();
            return;
        }

        if (nombre.isEmpty()) {
            JOptionPane.showMessageDialog(this, "El campo 'Nombre' es obligatorio.", "Campo Vacío", JOptionPane.WARNING_MESSAGE);
            txtNombre.requestFocus();
            return;
        }
        if (codigo.isEmpty()) {
            JOptionPane.showMessageDialog(this, "El campo 'Código' es obligatorio.", "Campo Vacío", JOptionPane.WARNING_MESSAGE);
            txtCodigo.requestFocus();
            return;
        }
        if (precioStr.isEmpty()) {
            JOptionPane.showMessageDialog(this, "El campo 'Precio' es obligatorio.", "Campo Vacío", JOptionPane.WARNING_MESSAGE);
            txtPrecio.requestFocus();
            return;
        }

        Float precio;
        try {
            precio = Float.parseFloat(precioStr);
            if (precio < 0) {
                throw new NumberFormatException("Precio negativo");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Ingrese un número válido.", "Dato Inválido", JOptionPane.WARNING_MESSAGE);
            txtPrecio.requestFocus();
            return;
        }

        Integer stockParaDTO = null;

        if ("CONTENEDOR".equals(tipoSeleccionado) || "VARIADO".equals(tipoSeleccionado)) {
            String stockStr = txtStock.getText().trim();
            if (stockStr.isEmpty()) {
                JOptionPane.showMessageDialog(this, "El campo 'Stock' es obligatorio.", "Campo Vacío", JOptionPane.WARNING_MESSAGE);
                txtStock.requestFocus();
                return;
            }
            try {
                stockParaDTO = Integer.parseInt(stockStr);
                if (stockParaDTO < 0) {
                    throw new NumberFormatException("Stock negativo");
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Ingrese un número válido.", "Dato Inválido", JOptionPane.WARNING_MESSAGE);
                txtStock.requestFocus();
                return;
            }
        }
        
        ProductoDTO productoAAgregar = null;
        Integer litros = null;
        Integer volumen = null;
        String codigoContenedorAsociado = null;

        if ("CONTENEDOR".equals(tipoSeleccionado)) {
            String volumenStr = txtVolumen.getText().trim();
            if (volumenStr.isEmpty()) {
                JOptionPane.showMessageDialog(this, "El campo 'Volumen' es obligatorio.", "Campo Vacío", JOptionPane.WARNING_MESSAGE);
                txtVolumen.requestFocus();
                return;
            }
            try {
                volumen = Integer.parseInt(volumenStr);
                if (volumen <= 0) {
                    throw new NumberFormatException("Volumen no positivo");
                }
                productoAAgregar = new ContenedorDTO(volumen, codigo, nombre, precio, stockParaDTO);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Ingrese un número válido.", "Dato Inválido", JOptionPane.WARNING_MESSAGE);
                txtVolumen.requestFocus();
                return;
            }

        } else if ("LLENADO".equals(tipoSeleccionado)) {
            String litrosStr = txtLitros.getText().trim();

            if (litrosStr.isEmpty()) {
                JOptionPane.showMessageDialog(this, "El campo 'Litros' es obligatorio.", "Campo Vacío", JOptionPane.WARNING_MESSAGE);
                txtLitros.requestFocus();
                return;
            }

            try {
                litros = Integer.parseInt(litrosStr);
                if (litros <= 0) {
                    throw new NumberFormatException("Litros no positivos");
                }
                
                productoAAgregar = new LlenadoDTO(codigo, nombre, precio, litros, codigoContenedorAsociado);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Ingrese un número válido.", "Dato Inválido", JOptionPane.WARNING_MESSAGE);
                txtLitros.requestFocus();
                return;
            }

        } else if ("VARIADO".equals(tipoSeleccionado)) {
            productoAAgregar = new VariadoDTO(codigo, nombre, precio, stockParaDTO);
        }

        if (productoAAgregar == null) {
            JOptionPane.showMessageDialog(this, "Error al agregar, inténtelo de nuevo.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            subsistemaInventarioFacade.agregarProducto(productoAAgregar);
            JOptionPane.showMessageDialog(this, "El producto se ha registrado exitosamente.", "Registro Exitoso", JOptionPane.INFORMATION_MESSAGE);
            limpiarFormularioCompleto();
        } catch (SubsistemaInventarioException e) {
            System.err.println("Error al agregar producto: " + e.getMessage());
            JOptionPane.showMessageDialog(this, "Error al registrar el producto, inténtelo de nuevo.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            System.err.println("Error inesperado: " + e.getMessage());
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al guardar el producto, inténtelo de nuevo.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void txtPrecioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioKeyTyped
        char c = evt.getKeyChar();
        String currentText = txtPrecio.getText();

        if (Character.isDigit(c)) {
            return;
        }

        if (c == '.' && !currentText.contains(".")) {
            return;
        }

        if (c == KeyEvent.VK_BACK_SPACE) {
            return;
        }

        evt.consume();
    }

    private void txtStockKeyTyped(java.awt.event.KeyEvent evt) {
        char c = evt.getKeyChar();

        if (!Character.isDigit(c) && c != KeyEvent.VK_BACK_SPACE) {
            evt.consume();
        }
    }//GEN-LAST:event_txtPrecioKeyTyped

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
        PantallaGestionarInventario pantallaInventario = new PantallaGestionarInventario(this, usuario);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void cmbxProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbxProductosActionPerformed

    }//GEN-LAST:event_cmbxProductosActionPerformed

    private void cmbxTipoProductosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbxTipoProductosItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            configurarVisibilidadCamposTipo();
        }
    }//GEN-LAST:event_cmbxTipoProductosItemStateChanged

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoActionPerformed

    private void txtStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStockActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStockActionPerformed

    private void inicializarComponentesAdicionales() {
        this.setTitle("SGVAPV - Agregar Nuevo Producto");
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        txtNombre.setEditable(true);
        txtCodigo.setEditable(true);
        txtStock.setEditable(true);
        txtPrecio.setEditable(true);

        cargarTiposDeProducto();
        configurarVisibilidadCamposTipo();

        cmbxTipoProductos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbxTipoProductosItemStateChanged(evt);
            }
        });

        txtPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                validarInputNumericoDecimal(evt, txtPrecio);
            }
        });
        txtStock.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                validarInputNumericoEntero(evt);
            }
        });
        txtLitros.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                validarInputNumericoEntero(evt);
            }
        });
        txtVolumen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                validarInputNumericoEntero(evt);
            }
        });

        this.pack();
        this.setLocationRelativeTo(parentFrame);
    }

    private void cargarTiposDeProducto() {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        model.addElement(PLACEHOLDER_TIPO);
        model.addElement("CONTENEDOR");
        model.addElement("LLENADO");
        model.addElement("VARIADO");
        cmbxTipoProductos.setModel(model);
    }

    private void configurarVisibilidadCamposTipo() {
        String tipoSeleccionado = cmbxTipoProductos.getSelectedItem() != null ? cmbxTipoProductos.getSelectedItem().toString() : "";
        System.out.println("Configurando visibilidad para tipo: " + tipoSeleccionado);

        boolean esLlenado = "LLENADO".equals(tipoSeleccionado);
        boolean esContenedor = "CONTENEDOR".equals(tipoSeleccionado);
        boolean esVariado = "VARIADO".equals(tipoSeleccionado);
        boolean mostrarStock = esContenedor || esVariado;
        jLabel8.setVisible(mostrarStock);
        txtStock.setVisible(mostrarStock);
        txtStock.setEditable(mostrarStock);
        if (!mostrarStock) {
            txtStock.setText("");
        }

        lblLitros.setVisible(esLlenado);
        txtLitros.setVisible(esLlenado);
        txtLitros.setEditable(esLlenado);
        if (!esLlenado) {
            txtLitros.setText("");
        }

        lblVolumen.setVisible(esContenedor);
        txtVolumen.setVisible(esContenedor);
        txtVolumen.setEditable(esContenedor);
        if (!esContenedor) {
            txtVolumen.setText("");
        }
    }

    private void limpiarFormularioCompleto() {
        txtNombre.setText("");
        txtCodigo.setText("");
        txtStock.setText("");
        txtPrecio.setText("");
        txtLitros.setText("");
        txtVolumen.setText("");
        if (cmbxTipoProductos.getItemCount() > 0) {
            cmbxTipoProductos.setSelectedIndex(0);
        }
        txtNombre.requestFocus();
    }

    private void validarInputNumericoDecimal(java.awt.event.KeyEvent evt, javax.swing.JTextField campo) {
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) && c != '.' && c != KeyEvent.VK_BACK_SPACE && c != KeyEvent.VK_DELETE) {
            evt.consume();
        }
        if (c == '.' && campo.getText().contains(".")) {
            evt.consume();
        }
    }

    private void validarInputNumericoEntero(java.awt.event.KeyEvent evt) {
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) && c != KeyEvent.VK_BACK_SPACE && c != KeyEvent.VK_DELETE) {
            evt.consume();
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JComboBox<Object> cmbxProductos;
    private javax.swing.JComboBox cmbxTipoProductos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblLitros;
    private javax.swing.JLabel lblVolumen;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtLitros;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecio;
    private javax.swing.JTextField txtStock;
    private javax.swing.JTextField txtVolumen;
    // End of variables declaration//GEN-END:variables
}
